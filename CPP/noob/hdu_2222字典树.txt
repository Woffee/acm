#include <iostream>
#include <queue>
using namespace std;

struct WordNode{

    WordNode *fail;//失败指针
    WordNode *next[26];//trie子节点个数
    int count; //count =1 是单词,0不是，-1用来标记已经记过数了。
    void clear()
    {
        fail=NULL;
        count=0;
        memset(next,NULL,sizeof(next));
    }

};

WordNode trie[510001],*root;

int index;
void clear(){
    
    index=0;
    trie[index].clear();
    root = &trie[index++];
}

void insert(char *str)//构造trie
{
    WordNode * ip = root;
	while(*str)
    {
        if(ip->next[*str - 'a'] == NULL)
        {
            trie[index].clear();//	当即就清
            ip->next[*str - 'a'] = &trie[index++];
        }

        ip = ip->next[*str - 'a'];
		str ++ ;

    }

    ip->count++;
	

}

void build_fail(WordNode * root)//构造含有fail指针的trie;
{
	queue<WordNode *> que;

    root->fail = NULL;
    
	que.push(root) ;

	while(!que.empty())
    {
        
		WordNode *temp = que.front() ;
		que.pop();
         

        for(int i =0; i < 26; i++)
        {
            if(temp->next[i] != NULL)
            {
                if(temp == root )
				{
					temp->next[i]->fail = root;
				}
                else
                {
                    WordNode *ip=temp->fail;
                    while(ip!=NULL)
                    {
                        if(ip->next[i] != NULL)
                        {
                            temp->next[i]->fail = ip->next[i];
                            break;
                        }
                        ip = ip->fail;
                    }
                    if(ip == NULL ) 
						temp->next[i]->fail = root;
                }
                
				que.push(temp->next[i]);
            }
        }
    }
}

int query(char *str)//查询
{
    int tp,num = 0;
    WordNode *ip = root;
    while(*str)
    {
        tp=*str-'a';
        while(ip->next[tp] == NULL && ip != root)
            ip = ip->fail;

        ip = ip->next[tp];

        if(ip == NULL) ip = root;
        WordNode *temp = ip;
        
		while(temp != root && temp->count != -1)
        {
            num += temp->count;//  不是单词 count = 0
            temp->count=-1;
            temp = temp->fail;
        }

        str++;

    }

    return num;

}


char word[51],str[1000001];//str目标串

int main()
{
    int t,n;
    scanf("%d",&t);
    while(t--)
    {
        clear();
        scanf("%d",&n);
        while(n--)
        {
            scanf("%s",word);
            insert(word);
        }

        build_fail(root);
        scanf("%s",str);
        printf("%d\n",query(str));

    }

    return 0;

}
