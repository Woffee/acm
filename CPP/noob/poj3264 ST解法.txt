#include <iostream>  
#include <cmath>  
using namespace std;  
const int maxn = 50000;  
int dpmin[maxn+10][20];  
int dpmax[maxn+10][20];  
int num[maxn+10];  
int max(int a, int b){if (a>=b) return a; else return b;}  
int min(int a, int b){if (a<=b) return a; else return b;}  
void init(int n)  
{  
    int i,j;  
    for (i=1; i<=n; i++) dpmax[i][0] = dpmin[i][0] = num[i];  
    int m = floor(log((double)n)/log(2.0));   
    for (j=1; j<=m; j++)  
    {  
        for (i=1; i<=n; i++)  
        {  
            dpmax[i][j] = dpmax[i][j-1];  
            dpmin[i][j] = dpmin[i][j-1];  
            if (i+(1<<(j-1))<=n)  
            {  
                dpmax[i][j] = max(dpmax[i][j-1], dpmax[i+(1<<(j-1))][j-1]);  
                dpmin[i][j] = min(dpmin[i][j-1], dpmin[i+(1<<(j-1))][j-1]);  
            }  
        }  
    }  
}  
int getmax(int l, int r)  
{  
    int k = floor(log((double)(r-l+1))/log(2.0));  
    return max(dpmax[l][k], dpmax[r-(1<<k)+1][k]);  
}  
int getmin(int l, int r)  
{  
    int k = floor(log((double)(r-l+1))/log(2.0));  
    return min(dpmin[l][k], dpmin[r-(1<<k)+1][k]);  
}  
int main()  
{  
    int n,m;  
    int i;  
    int a,b;  
    scanf("%d %d", &n, &m);  
    for (i=1; i<=n; i++) scanf("%d", &num[i]);  
    init(n);  
    for (i=0; i<m; i++)  
    {  
        scanf("%d %d", &a, &b);  
        printf("%d/n", getmax(a,b)-getmin(a,b));  
    }  
    return 0;  
}  